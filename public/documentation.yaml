openapi: 3.0.0

info:
  title: Movie API
  description: An API being used to learn programming with NODE and back-end web development. I use movie data from the MosFilm youtube channel.
  version: 1.0.0.DEV


servers:
  - url: http://localhost:8080/
    description: Server for Development


paths:
  /movies:
    get:
      summary: Returns a list of movies.
      description: An array of movies will be sent as a JSON file.
      responses:
        "200":
          description: A JSON array of movie details.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Movie"
  /movies/{title}:
    get:
      summary: Gets a movie by title.
      parameters:
      - in: path
        name: title
        schema:
          type: string
          enum: [Stalker, Solaris, The Mirror, Andrei Rublev, Ivan's Childhood]
          example: Stalker
        required: true
        description: title of movie to get
      responses:
        "200":
          description: movie details requested
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Movie" 
        "400":
          description: Error - no item was found with requested title
          content:
            text/plain: no such movie
  /movies/genre/{genreName}:
    get:
      summary: Gets a genre by name.
      parameters:
      - in: path
        name: Genre.Name
        schema:
          type: string
          enum: [Drama, War Movie, Science Fiction]
          example: Drama
        required: true
        description: title of genre to get
      responses:
        "200":
          description: genre details requested
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Genre" 
        "400":
          description: Error - no item was found with requested title
          content:
            text/plain: no such genre
  /movies/director/{directorName}:
    get:
      summary: Gets a director by name.
      parameters:
      - in: path
        name: Director.Name
        schema:
          type: string
          enum: [Andrey Tarkovsky]
          example: Andrey Tarkovsky
        required: true
        description: name of director to get
      responses:
        "200":
          description: director details requested
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Director" 
        "400":
          description: Error - no item was found with requested title
          content:
            text/plain: no such director
  components:
    schemas:
      Movie:
        type: array
        items:
          title: string
          year: int
          director: array
            name: string
          descriptions: string
          URL: string
          subs: array
            Spanish: boolean
            SpanishURL: string
          Genre: array
            Name: string
            Description: string
      Genre:
        type: array
        items:
          Name: string
          Description: string
      Director:
        type: array
        items:
          Name: string
